vim.keymap.set("n", "<leader>e", ":NvimTreeToggle<CR>", { desc = "Opens NvimTree" })
vim.keymap.set("n", "<leader>h", ":nohlsearch<CR>", { desc = "Removes highlights" })

-- fuzzy finding
vim.keymap.set("n", "<leader>ff", function()
	require("fzf-lua").files()
end, { desc = "[F]uzzy [F]ind files" })
vim.keymap.set("n", "<leader>fg", function()
	require("fzf-lua").live_grep()
end, { desc = "Live [F]ile [G]rep" })
vim.keymap.set("n", "<leader>gb", function()
	require("fzf-lua").git_branches()
end, { desc = "Find [G]it [B]ranches" })
vim.keymap.set("n", "<leader>fb", function()
	require("fzf-lua").builtin()
end, { desc = "[F]ind [B]uiltins for fzf" })
vim.keymap.set("n", "<leader>fh", function()
	require("fzf-lua").helptags()
end, { desc = "[F]ind [H]elp" })
vim.keymap.set("n", "<leader>fk", function()
	require("fzf-lua").keymaps()
end, { desc = "[F]ind [K]eymaps" })
vim.keymap.set("n", "<leader>fk", function()
	require("fzf-lua").keymaps()
end, { desc = "[F]ind [K]eymaps" })
vim.keymap.set("n", "<leader>fw", function()
	require("fzf-lua").grep_cword()
end, { desc = "[F]ind current [W]ord" })
vim.keymap.set("n", "<leader>fW", function()
	require("fzf-lua").grep_cWORD()
end, { desc = "[F]ind current [W]ORD" })
vim.keymap.set("n", "<leader>fd", function()
	require("fzf-lua").diagnostics_document()
end, { desc = "[F]ind [D]iagnostics" })
vim.keymap.set("n", "<leader>fr", function()
	require("fzf-lua").resume()
end, { desc = "[F]ind [R]esume" })
vim.keymap.set("n", "<leader>fo", function()
	require("fzf-lua").oldfiles()
end, { desc = "[F]ind [O]ld Files" })
vim.keymap.set("n", "<leader><leader>", function()
	require("fzf-lua").buffers()
end, { desc = "[ ] Find existing buffers" })
vim.keymap.set("n", "<leader>/", function()
	require("fzf-lua").lgrep_curbuf()
end, { desc = "[/] Live grep the current buffer" })

-- conform keymaps
vim.keymap.set("n", "<leader>cf", function()
	require("conform").format({
		lsp_format = "fallback",
	})
end, { desc = "[C]urrent file - [F]ormat" })
